{#
title: ***
description: ***
author: ***
date: ****-**-**
canonical: ***
openGraph:
    title: ***
    description: ***
    url: ***  # set global
    image: *** # set global
    site_name: *** # top site name
    type: website/article/profile/product/event
googleAnalytics: ***
noindex: true/false
#}

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id={{ googleAnalytics }}"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', '{{ googleAnalytics }}');
    </script>
    <!-- General -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ title }}</title>
    <meta name="description" content="{{ description }}" />
    {%- if author is defined %}
    <meta name="author" content="{{ author }}" />
    <meta name="article:author" content="{{ author }}" />
    {%- endif %}
    {%- if date is defined %}
    <meta property="article:published_time" content="{{ date.toISOString().slice(0, 19) }}Z" />
    <meta property="article:modified_time" content="{{ date.toISOString().slice(0, 19) }}Z" />
    {%- endif %}
    <!-- SEO -->
    {%- if canonical is defined %}
    <link rel="canonical" href="{{ canonical }}" />
    {%- endif %}
    {%- if noindex %}
    <meta name="robots" content="noindex, nofollow" />
    {%- endif %}
    <!-- Open Graph -->
    {%- if openGraph is defined %}{% for key, value in openGraph %}
    <meta property="og:{{ key }}" content="{{ value }}" />
    {%- endfor %}{% endif %}
    <!-- Style -->
    <link rel="icon" href="/assets/favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.min.css">
    <!--<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/github-markdown-css@5.8.1/github-markdown-light.min.css">-->
    <style>
        //.markdown-body { max-width: 70ch; margin-inline: auto; padding: 2rem; }
        .container { display: flex; gap: 10px; }
        .half { box-sizing: border-box; }
        .half:first-child { width: 60%;}
        .half:last-child { width: 40%; }

        @media (max-width: 768px) {
            .container { flex-direction: column; }
            .half { width: 100% !important; }
            .half:last-child img { width: 100%; height: auto; display: block; }
        }
    </style>
    <!-- To highlight code -->
	<link href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css" rel="stylesheet"/>
    <!-- MathJax -->
    <script>
        window.MathJax = {
            tex: { 
                inlineMath: [['$', '$'], ['\\(', '\\)']],
                displayMath: [['$$','$$'], ['\\[','\\]']]
            },
            svg: { fontCache: 'global' }
        };
    </script>
    <script id="MathJax-script" async
        src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js">
    </script>
</head>

<body>
    {% block body %}
    <h1>{{ title }}</h1>
    {{ content | safe }}
    {% endblock %}
</body>
